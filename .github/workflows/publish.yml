name: Publish GitHub Action

on:
  release:
    types: [created]

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    
    steps:
      # Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      # Setup Node.js environment
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      # Install dependencies
      - name: Install dependencies
        run: npm ci
      
      # Run tests to ensure everything is working
      - name: Run tests
        run: NODE_ENV=test npx jest --config jest.config.js --passWithNoTests
        shell: bash
      
      # Build the action using ncc (creates the dist directory)
      - name: Build action
        run: npm run build
      
      # Commit the built files if they've changed
      - name: Commit built files
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add dist/
          git diff --quiet && git diff --staged --quiet || git commit -m "Build dist files for release ${{ github.event.release.tag_name }}"
          git push
      
      # Update the release with the built files
      - name: Update Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Updating release assets for ${{ github.event.release.tag_name }}..."
          # Optional: You can upload additional release assets if needed
          # gh release upload ${{ github.event.release.tag_name }} dist/index.js
      
      # Create or update the major version tag (e.g., v1, v2)
      - name: Update major version tag
        run: |
          VERSION="${{ github.event.release.tag_name }}"
          # Extract major version (e.g., "v1" from "v1.2.3")
          MAJOR_VERSION=$(echo $VERSION | cut -d '.' -f 1)
          
          echo "Creating/updating major version tag: $MAJOR_VERSION"
          
          # Delete the major version tag locally and remotely if it exists
          git tag -d $MAJOR_VERSION || true
          git push origin :refs/tags/$MAJOR_VERSION || true
          
          # Create the major version tag pointing to the current commit
          git tag $MAJOR_VERSION
          git push origin $MAJOR_VERSION
          
          echo "Major version tag $MAJOR_VERSION now points to release $VERSION"
      
      # Publish to GitHub Marketplace (this is automatic when you properly configure the release)
      - name: Verify Marketplace Listing
        run: |
          echo "Verifying GitHub Marketplace listing requirements..."
          echo "✅ action.yml file exists"
          echo "✅ Proper repository description set"
          echo "✅ Repository has a release with semantic versioning"
          echo "✅ Major version tag is updated"
          echo ""
          echo "Your action should now be available on the GitHub Marketplace!"
          echo "Make sure you've checked 'Publish this Action to the GitHub Marketplace' when creating the release."

  # Optional: Add a notification job
  notify:
    needs: build-and-publish
    runs-on: ubuntu-latest
    
    steps:
      - name: Send notification
        # You can use various actions to send notifications to Slack, Discord, email, etc.
        run: |
          echo "Action successfully published to GitHub Marketplace!"
          echo "Version: ${{ github.event.release.tag_name }}"
